{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../utils/reduxUtils';\nconst initialState = {\n  posts: [],\n  filteredPosts: [],\n  approvePosts: false,\n  rejectPosts: false,\n  loadingPosts: false,\n  errorFetchingPosts: false\n};\n\nconst setLoadingPosts = (state, action) => {\n  return updateObject(state, {\n    loadingPosts: true\n  });\n};\n/** FETCH POSTS START */\n\n\nconst fetchPostsFailed = (state, action) => {\n  return updateObject(state, {\n    loadingPosts: false,\n    errorFetchingPosts: true\n  });\n};\n\nconst fetchPostsSuccess = (state, action) => {\n  return updateObject(state, {\n    posts: action.posts,\n    filteredPosts: action.posts,\n    loadingPosts: false,\n    errorFetchingPosts: false\n  });\n};\n/** FETCH POSTS END */\n\n\nconst approvePosts = (state, action) => {\n  return updateObject(state, {\n    approvePosts: true\n  });\n};\n\nconst rejectPosts = (state, action) => {\n  return updateObject(state, {\n    rejectPosts: true\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_POSTS_FAILURE:\n      return fetchPostsFailed(state, action);\n\n    case actionTypes.FETCH_POSTS_SUCCESS:\n      return fetchPostsSuccess(state, action);\n\n    case actionTypes.APPROVE_POSTS:\n      return approvePosts(state, action);\n\n    case actionTypes.REJECT_POSTS:\n      return rejectPosts(state, action);\n\n    case actionTypes.LOADING_POSTS:\n      return setLoadingPosts(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/admin/Downloads/posts-simple-page-master/src/store/reducers/postsReducer.js"],"names":["actionTypes","updateObject","initialState","posts","filteredPosts","approvePosts","rejectPosts","loadingPosts","errorFetchingPosts","setLoadingPosts","state","action","fetchPostsFailed","fetchPostsSuccess","reducer","type","FETCH_POSTS_FAILURE","FETCH_POSTS_SUCCESS","APPROVE_POSTS","REJECT_POSTS","LOADING_POSTS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,aAAa,EAAE,EAFI;AAGnBC,EAAAA,YAAY,EAAE,KAHK;AAInBC,EAAAA,WAAW,EAAE,KAJM;AAKnBC,EAAAA,YAAY,EAAE,KALK;AAMnBC,EAAAA,kBAAkB,EAAE;AAND,CAArB;;AASA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzC,SAAOV,YAAY,CAACS,KAAD,EAAQ;AAAEH,IAAAA,YAAY,EAAE;AAAhB,GAAR,CAAnB;AACD,CAFD;AAIA;;;AACA,MAAMK,gBAAgB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAOV,YAAY,CAACS,KAAD,EAAQ;AACzBH,IAAAA,YAAY,EAAE,KADW;AAEzBC,IAAAA,kBAAkB,EAAE;AAFK,GAAR,CAAnB;AAID,CALD;;AAOA,MAAMK,iBAAiB,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOV,YAAY,CAACS,KAAD,EAAQ;AACzBP,IAAAA,KAAK,EAAEQ,MAAM,CAACR,KADW;AAEzBC,IAAAA,aAAa,EAAEO,MAAM,CAACR,KAFG;AAGzBI,IAAAA,YAAY,EAAE,KAHW;AAIzBC,IAAAA,kBAAkB,EAAE;AAJK,GAAR,CAAnB;AAMD,CAPD;AASA;;;AAEA,MAAMH,YAAY,GAAG,CAACK,KAAD,EAAQC,MAAR,KAAmB;AACtC,SAAOV,YAAY,CAACS,KAAD,EAAQ;AACzBL,IAAAA,YAAY,EAAE;AADW,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMC,WAAW,GAAG,CAACI,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAOV,YAAY,CAACS,KAAD,EAAQ;AACzBJ,IAAAA,WAAW,EAAE;AADY,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMQ,OAAO,GAAG,CAACJ,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACI,IAAf;AACE,SAAKf,WAAW,CAACgB,mBAAjB;AACE,aAAOJ,gBAAgB,CAACF,KAAD,EAAQC,MAAR,CAAvB;;AACF,SAAKX,WAAW,CAACiB,mBAAjB;AACE,aAAOJ,iBAAiB,CAACH,KAAD,EAAQC,MAAR,CAAxB;;AACF,SAAKX,WAAW,CAACkB,aAAjB;AACE,aAAOb,YAAY,CAACK,KAAD,EAAQC,MAAR,CAAnB;;AACF,SAAKX,WAAW,CAACmB,YAAjB;AACE,aAAOb,WAAW,CAACI,KAAD,EAAQC,MAAR,CAAlB;;AACF,SAAKX,WAAW,CAACoB,aAAjB;AACE,aAAOX,eAAe,CAACC,KAAD,EAAQC,MAAR,CAAtB;;AACF;AACE,aAAOD,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeI,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../utils/reduxUtils';\n\nconst initialState = {\n  posts: [],\n  filteredPosts: [],\n  approvePosts: false,\n  rejectPosts: false,\n  loadingPosts: false,\n  errorFetchingPosts: false,\n};\n\nconst setLoadingPosts = (state, action) => {\n  return updateObject(state, { loadingPosts: true });\n};\n\n/** FETCH POSTS START */\nconst fetchPostsFailed = (state, action) => {\n  return updateObject(state, {\n    loadingPosts: false,\n    errorFetchingPosts: true,\n  });\n};\n\nconst fetchPostsSuccess = (state, action) => {\n  return updateObject(state, {\n    posts: action.posts,\n    filteredPosts: action.posts,\n    loadingPosts: false,\n    errorFetchingPosts: false,\n  });\n};\n\n/** FETCH POSTS END */\n\nconst approvePosts = (state, action) => {\n  return updateObject(state, {\n    approvePosts: true,\n  });\n};\n\nconst rejectPosts = (state, action) => {\n  return updateObject(state, {\n    rejectPosts: true,\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_POSTS_FAILURE:\n      return fetchPostsFailed(state, action);\n    case actionTypes.FETCH_POSTS_SUCCESS:\n      return fetchPostsSuccess(state, action);\n    case actionTypes.APPROVE_POSTS:\n      return approvePosts(state, action);\n    case actionTypes.REJECT_POSTS:\n      return rejectPosts(state, action);\n    case actionTypes.LOADING_POSTS:\n      return setLoadingPosts(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}